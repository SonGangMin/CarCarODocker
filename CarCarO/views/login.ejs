<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="/stylesheets/auth.css" />
  </head>
  <body>
    <form
      action="/auth/login"
      method="post"
      class="form login"
      onsubmit="sessionStorage.removeItem('loginRedirectUrl')"
    >
      <h1 class="title">로그인</h1>
      <label for=""><input type="text" name="id" placeholder="아이디"/></label>
      <label for=""
        ><input type="password" name="password" placeholder="비밀번호"/></label>
        <input id="redirectUrl" type="hidden" name="redirectUrl" />
        <button type="submit" class="btn">로그인</button>
        <button type="button" onclick="location.href=('/auth/kakao')" class="btn">
          카카오 로그인
        </button>
        <div class="sub_btnBox">
          <button type="button" onclick="findIdPopup()" class="sub_btn">
            아이디 찾기
          </button>
          <span>ㅣ</span>
          <button type="button" onclick="findPwPopup()" class="sub_btn">
            비밀번호 찾기
          </button>
          <span>ㅣ</span>
          <button type="button" onclick="location.href=('/join')" class="sub_btn">
            회원가입
          </button>
        </div>
    </form>

    <script>
      window.onload = () => {
        if (new URL(location.href).searchParams.get("loginError")) {
          alert(new URL(location.href).searchParams.get("loginError"));
        }
      };

      // all tags loaded
      window.addEventListener("DOMContentLoaded", () => {
        const hiddenTag = document.getElementById("redirectUrl");
        // const redirectUri = sessionStorage.loginRedirectUrl != null ? sessionStorage.loginRedirectUrl : "/";
        const redirectUri = sessionStorage.loginRedirectUrl ?? "/"; // sessionStorage.loginRedirectUrl이 null/undefined면 "/"를 넣겠다. 초깃값.

        hiddenTag.value = redirectUri;
      });
      let popupWidth = 400;
      let popupHeight = 400;

      function getCurrentScreenCoordinates() {
        const activeWindow = window.screen;
        return {
          left: activeWindow.availLeft,
          top: activeWindow.availTop,
          width: activeWindow.availWidth,
          height: activeWindow.availHeight,
        };
      }

      function calculateCenterCoordinates(
        screenCoordinates,
        popupWidth,
        popupHeight
      ) {
        const popupX =
          screenCoordinates.left + (screenCoordinates.width - popupWidth) / 2;
        const popupY =
          screenCoordinates.top + (screenCoordinates.height - popupHeight) / 2;
        return { x: popupX, y: popupY };
      }

      function findIdPopup() {
        const screenCoordinates = getCurrentScreenCoordinates();
        const centerCoordinates = calculateCenterCoordinates(
          screenCoordinates,
          popupWidth,
          popupHeight
        );
        window.open(
          "/auth/findid",
          "CarCarO ID찾기",
          `height=${popupHeight}, width=${popupWidth}, left=${centerCoordinates.x}, top=${centerCoordinates.y}, menubar=no, status=no, toolbar=no`
        );
      }
      function findPwPopup() {
        const screenCoordinates = getCurrentScreenCoordinates();
        const centerCoordinates = calculateCenterCoordinates(
          screenCoordinates,
          popupWidth,
          popupHeight
        );
        window.open(
          "/auth/findpw",
          "CarCarO PW찾기",
          `height=${popupHeight}, width=${popupWidth}, left=${centerCoordinates.x}, top=${centerCoordinates.y}, menubar=no, status=no, toolbar=no`
        );
      }
    </script>
  </body>
</html>
